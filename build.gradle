/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
  id 'java-library'
  id 'maven-publish'
  id "com.github.johnrengelman.shadow" version "7.1.2"
  id 'com.diffplug.spotless' version '6.13.0'
}

project(':hybridcache') {
  apply plugin: 'java-library'
  apply plugin: 'maven-publish'
  apply plugin: 'signing'
  apply plugin: 'com.github.johnrengelman.shadow'
  apply plugin: 'com.diffplug.spotless'

  version = '0.0.1'
  archivesBaseName = 'hybridcache'
  group = 'io.github.drawmoon.hybridcache'

  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8

  dependencies {
    implementation 'com.github.ben-manes.caffeine:caffeine:2.9.3'
    implementation 'io.lettuce:lettuce-core:6.2.4.RELEASE'
    implementation 'io.minio:minio:8.5.3'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'de.undercouch:bson4jackson:2.13.1'
    implementation 'com.aventrix.jnanoid:jnanoid:2.0.0'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testImplementation 'junit:junit:4.13.2'
  }

  repositories {
    mavenLocal()
    mavenCentral()
  }

  [compileJava, compileTestJava].each() {
    it.options.encoding = "UTF-8"
  }

  spotless {
    java {
      target '**/*.java'
      importOrder 'edu', 'com', 'io', 'java', 'javax', 'org', ''
      removeUnusedImports()
      trimTrailingWhitespace()
      palantirJavaFormat()
    }
    groovyGradle {
      target '*.gradle'
    }
  }

  jar {
    manifest {
      attributes('Implementation-Title': archivesBaseName,
              'Implementation-Version': version,
              'Built-By': 'drash',
              'Built-JDK': System.getProperty('java.version'),
              'Source-Compatibility': sourceCompatibility,
              'Target-Compatibility': targetCompatibility)
    }
  }

  java {
    toolchain {
      languageVersion = JavaLanguageVersion.of(8)
    }
    withJavadocJar()
    withSourcesJar()
  }

  javadoc.options {
    encoding = 'UTF-8'
    links 'https://docs.oracle.com/javase/8/docs/api/'
  }

  artifacts {
    archives javadocJar, sourcesJar, shadowJar
  }

  signing {
    if (project.properties.containsKey('signing.keyId')) {
      sign configurations.archives
    }
  }

  afterEvaluate {
    publishing {
      publications {
        plugin(MavenPublication) {
          from components.java
          artifactId = archivesBaseName
          groupId = group
          version = version
          pom {
            name = archivesBaseName
            packaging = 'jar'
            description = 'A hybrid caching library'
            url = 'https://github.com/drawmoon/hybrid-cache'
            inceptionYear = '2023'

            licenses {
              license {
                name = 'MIT License'
                url = 'https://opensource.org/licenses/MIT'
              }
            }

            scm {
              connection = 'scm:git:git@github.com:drawmoon/hybrid-cache.git'
              developerConnection = 'scm:git:git@github.com:drawmoon/hybrid-cache.git'
              url = 'https://github.com/drawmoon/hybrid-cache'
            }

            developers {
              developer {
                id = 'drash'
                name = 'drawmoon'
                email = '1340260725@qq.com'
              }
            }
          }
        }
      }
      repositories {
        maven {
          name = "ossrh"
          url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
          credentials {
              username = project.properties['nexusUsername']
              password = project.properties['nexusPassword']
          }
        }
        maven {
          name = "ossrh-snapshots"
          url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
          credentials {
              username = project.properties['nexusUsername']
              password = project.properties['nexusPassword']
          }
        }
      }
    }
  }
}
