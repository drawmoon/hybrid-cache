/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
}

allprojects {
  group = 'com.github.drawmoon.hybridcache'
  description = 'A hybrid caching library'
  version = '0.0.1'
}

subprojects {
  apply plugin: 'java-library'

  repositories {
    // Use Maven Local for resolving dependencies.
    mavenLocal()
    // Use Maven Central for resolving dependencies.
    mavenCentral()
  }

  dependencies {
    // Use Apache common library.
    api 'org.apache.commons:commons-lang3:3.9'

    // Use Lombok library.
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'
  }

  // Apply a specific Java toolchain to ease working on different environments.
  java {
    toolchain {
      languageVersion = JavaLanguageVersion.of(8)
    }
  }

  [compileJava, compileTestJava].each() {
    it.options.encoding = "UTF-8"
  }
}

// Hybridcache module gradle build settings
project(':hybridcache') {
  apply plugin: 'java-library'
  apply plugin: 'maven-publish'

  archivesBaseName = 'hybridcache'

  dependencies {
    // Use Hybridobs cache library.
    api project(':hybridobs')

    // Use Caffeine cache library.
    api 'com.github.ben-manes.caffeine:caffeine:2.9.3'
    // Use Lettuce cache library.
    api 'io.lettuce:lettuce-core:6.2.4.RELEASE'
  }

  java {
    withJavadocJar()
    withSourcesJar()
  }

  javadoc.options {
    encoding = 'UTF-8'
    links 'https://docs.oracle.com/javase/8/docs/api/'
  }

  artifacts {
    archives javadocJar, sourcesJar
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        artifactId = archivesBaseName
        from components.java
        pom {
          name = archivesBaseName
          packaging = 'jar'
          description = description
          url = 'https://github.com/drawmoon/hybrid-cache'
          inceptionYear = '2023'
          
          licenses {
            license {
              name = 'MIT License'
              url = 'https://opensource.org/licenses/MIT'
            }
          }

          scm {
            connection = 'scm:git:git@github.com:drawmoon/hybrid-cache.git'
            developerConnection = 'scm:git:git@github.com:drawmoon/hybrid-cache.git'
            url = 'https://github.com/drawmoon/hybrid-cache'
          }
          
          developers {
            developer {
              id = 'drash'
              name = 'drawmoon'
              email = '1340260725@qq.com'
            }
          }
        }
      }
    }
  }
}

// Hybridobs module gradle build settings
project(':hybridobs') {
  apply plugin: 'java-library'
  apply plugin: 'maven-publish'

  archivesBaseName = 'hybridobs'

  dependencies {
    // Use Minio library.
    api 'io.minio:minio:8.5.3'
  }

  java {
    withJavadocJar()
    withSourcesJar()
  }

  javadoc.options {
    encoding = 'UTF-8'
    links 'https://docs.oracle.com/javase/8/docs/api/'
  }

  artifacts {
    archives javadocJar, sourcesJar
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        artifactId = archivesBaseName
        from components.java
        pom {
          name = archivesBaseName
          packaging = 'jar'
          description = description
          url = 'https://github.com/drawmoon/hybrid-cache'
          inceptionYear = '2023'
          
          licenses {
            license {
              name = 'MIT License'
              url = 'https://opensource.org/licenses/MIT'
            }
          }

          scm {
            connection = 'scm:git:git@github.com:drawmoon/hybrid-cache.git'
            developerConnection = 'scm:git:git@github.com:drawmoon/hybrid-cache.git'
            url = 'https://github.com/drawmoon/hybrid-cache'
          }
          
          developers {
            developer {
              id = 'drash'
              name = 'drawmoon'
              email = '1340260725@qq.com'
            }
          }
        }
      }
    }
  }
}
