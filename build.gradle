/*
 * MIT License
 *
 * Copyright (c) 2023 drsh
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 * documentation files (the “Software”), to deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

// gradle version: 8.1.1
plugins {
    id 'java-library'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'com.diffplug.spotless' version '6.13.0'
    id 'com.github.spotbugs' version '5.2.1'
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.diffplug.spotless'

version = '0.0.1-SNAPSHOT'
archivesBaseName = 'hybridcache'
group = 'io.github.drawmoon.hybridcache'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'com.github.ben-manes.caffeine:caffeine:2.9.3'
    implementation 'io.lettuce:lettuce-core:6.2.4.RELEASE'
    implementation 'io.minio:minio:8.5.3'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'de.undercouch:bson4jackson:2.13.1'
    implementation 'com.aventrix.jnanoid:jnanoid:2.0.0'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

[compileJava, compileTestJava].each() {
    it.options.encoding = "UTF-8"
}

spotless {
    java {
        target '**/*.java'
        importOrder 'edu', 'com', 'io', 'java', 'javax', 'org', ''

        removeUnusedImports()
        trimTrailingWhitespace()
        palantirJavaFormat()
    }
    groovyGradle {
        target '*.gradle'
    }
}

spotbugs {
    effort = 'max'
    reportLevel = 'low'
    excludeFilter = file("$rootDir/spotbugs-filter.xml")
}

spotbugsMain {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

jar {
    manifest {
        attributes('Implementation-Title': archivesBaseName,
                    'Implementation-Version': version,
                    'Built-By': 'drash',
                    'Built-JDK': System.getProperty('java.version'),
                    'Source-Compatibility': sourceCompatibility,
                    'Target-Compatibility': targetCompatibility)
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc.options {
    encoding = 'UTF-8'
    if (JavaVersion.current() == JavaVersion.VERSION_1_8) {
        links 'https://docs.oracle.com/javase/8/docs/api/'
    } else {
        links 'https://docs.oracle.com/en/java/javase/11/docs/api/'
    }
}

artifacts {
    archives javadocJar, sourcesJar, shadowJar
}

signing {
    if (project.properties.containsKey('signing.keyId')) {
        sign configurations.archives
    }
}

afterEvaluate {
    publishing {
        publications {
            plugin(MavenPublication) {
                from components.java
                artifactId = archivesBaseName
                groupId = group
                version = version
                pom {
                    name = archivesBaseName
                    packaging = 'jar'
                    description = 'A hybrid caching library'
                    url = 'https://github.com/drawmoon/hybrid-cache'
                    inceptionYear = '2023'

                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }

                    scm {
                        connection = 'scm:git:git@github.com:drawmoon/hybrid-cache.git'
                        developerConnection = 'scm:git:git@github.com:drawmoon/hybrid-cache.git'
                        url = 'https://github.com/drawmoon/hybrid-cache'
                    }

                    developers {
                        developer {
                            id = 'drash'
                            name = 'drawmoon'
                            email = '1340260725@qq.com'
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name = "ossrh"
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = project.properties['nexusUsername']
                    password = project.properties['nexusPassword']
                }
            }
            maven {
                name = "ossrh-snapshots"
                url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                credentials {
                    username = project.properties['nexusUsername']
                    password = project.properties['nexusPassword']
                }
            }
        }
    }
}
